@model Libol.Models.PATRON_BY_EXCEL
@{
    ViewBag.Title = "Sửa thông tin từ File";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit2", "Patron"))
{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <h1 style="text-align:center">Sửa thông tin</h1>

    <div class="form-horizontal">
        <br />


        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            <label>Mã sinh viên: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @if (ViewBag.failMessage.Contains("CodeFail") && ViewBag.failMessage.Contains("CodeDuplicate"))
                {<p style="color:red">Code đã tồn tại và trùng dữ liệu</p>}
                else if (ViewBag.failMessage.Contains("CodeDuplicate"))
                {
                    {<p style="color:red">Code trùng dữ liệu</p>}
                }
                else if (ViewBag.failMessage.Contains("CodeFail"))
                {
                    {<p style="color:red">Code đã tồn tại</p>}
                }
            </div>

        </div>
        <div class="form-group">
            <label>FirstName: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">
            <label>MiddleName: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label>LastName: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            <label>Giới tính: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Ngày sinh: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @if (ViewBag.failMessage.Contains("dob"))
                {<p style="color:red">Ngày sinh sai</p>}
            </div>
        </div>

        <div class="form-group">
            <label>Email: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @if (ViewBag.failMessage.Contains("EmailFail") && ViewBag.failMessage.Contains("EmailDuplicate"))
                {<p style="color:red">Email đã tồn tại và trùng dữ liệu</p>}
                else if (ViewBag.failMessage.Contains("EmailDuplicate"))
                {
                    {<p style="color:red">Email trùng dữ liệu</p>}
                }
                else if (ViewBag.failMessage.Contains("EmailFail"))
                {
                    {<p style="color:red">Email đã tồn tại</p>}
                }
            </div>
        </div>

        <div class="form-group">
            <label>Địa chỉ: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">
            <label>Trường: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.College, new { htmlAttributes = new { @class = "form-control", @id = "txtCollege" } })
                @Html.ValidationMessageFor(model => model.College, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                <select class="form-control" id="select3" onchange="changeCollege()">
                    <option value="-1">----- Chọn -----</option>
                    @foreach (var item in ViewBag.listCollegeDB)
                    {
                        <option value="@item.College">@item.College</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label>Chuyên ngành: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Faculty, new { htmlAttributes = new { @class = "form-control", @id = "txtFaculty" } })
                @Html.ValidationMessageFor(model => model.Faculty, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @if (ViewBag.failMessage.Contains("faculty"))
                {<p style="color:red">Chuyên ngành sai</p>}
            </div>
            <div class="col-md-2">
                <select class="form-control" id="select4" onchange="changeFaculty()">
                    <option value="-1">----- Chọn -----</option>

                </select>
            </div>
        </div>

        <div class="form-group">
            <label>Số điện thoại: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Khóa: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <label>Thành phố: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "txtCity" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                <select class="form-control" id="select2" onchange="changeCity()">
                    <option value="-1">----- Chọn -----</option>
                    @foreach (var item in ViewBag.listCityDB)
                    {
                        <option value="@item">@item</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <label>Lớp: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Nhóm: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PatronGroup, new { htmlAttributes = new { @class = "form-control", @id = "txtPatronGroup" } })
                @Html.ValidationMessageFor(model => model.PatronGroup, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                <select class="form-control" id="select1" onchange="changePatronGroup()">
                    <option value="-1">----- Chọn -----</option>
                    @foreach (var item in ViewBag.listPatronGroup)
                    {
                        <option value="@item">@item</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>

    </div>
    <script type="text/javascript">
            function changePatronGroup() {
                var result = document.getElementById("select1").value;
                document.getElementById("txtPatronGroup").value = result;
            }
            function changeCity() {
                var result = document.getElementById("select2").value;
                document.getElementById("txtCity").value = result;
            }
            function changeCollege() {
                var collegeChange = document.getElementById("select3").value;
                document.getElementById("txtCollege").value = collegeChange;
                var e = document.getElementById("select3");
                var college = e.options[e.selectedIndex].value;
                var empObj = {
                    College: college
                };
                $.ajax({
                    url: "/Patron/changeCollege",
                    data: JSON.stringify(empObj),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        var html = "<option value='-1'>----- Chọn -----</option>"
                        //for (r in result) {
                        //    html = html + "<option value=" + result[r].Faculty + ">" + result[r].Faculty + "</option>"
                        //}
                        $.each(result, function () {
                            html = html + "<option value=" + this.ID + ">" + this.Faculty + "</option>"
                        });
                        document.getElementById("select4").innerHTML = html;

                    },
                    error: function (errormessage) {

                    }
                });
            }
            function changeFaculty() {
                var result2 = document.getElementById("select4").value;
                var empObj = {
                    FacultyID: result2
                };
                $.ajax({
                    url: "/Patron/displayFaculty",
                    data: JSON.stringify(empObj),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        document.getElementById("txtFaculty").value=result;

                    },
                    error: function (errormessage) {

                    }
                });
            }


    </script>
}




